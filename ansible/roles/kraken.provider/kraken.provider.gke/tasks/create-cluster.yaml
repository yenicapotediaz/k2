---
- name: Retrive default auth from kube basic authn list
  set_fact:
    default_kube_basic_auth: "{{ cluster.kubeAuth.authn.basic | selectattr('user', 'match', '^'+cluster.kubeAuth.authn.default_basic_user+'$') | first }}"

- name: Render a deployment manager template
  template: src=deploymentmanager-create.yaml.jinja2
   dest="{{ config_base | expanduser }}/{{ cluster.name }}/deploymentmanager-create.yaml"

- name: Deploy cluster
  command: >
    gcloud deployment-manager deployments create {{ cluster.name }}-k2-deployment
      --config {{ config_base | expanduser }}/{{ cluster.name }}/deploymentmanager-create.yaml
      --project {{ cluster.providerConfig.project }}
      --no-async
      --quiet
  register: deployment_result
  ignore_errors: yes

- name: Inspect the failed deployments
  command: >
    gcloud deployment-manager deployments describe {{ cluster.name }}-k2-deployment
      --project {{ cluster.providerConfig.project }}
      --format yaml
  when: (deployment_result is defined) and deployment_result | failed
  register: inspect_result

- name: load failed deployment inspection result into variable
  set_fact:
    yaml_inspect_result: "{{ inspect_result.stdout | from_yaml }}"
  when: (inspect_result is defined) and deployment_result | failed

- name: Fail unless deployed cluster is 100 complete
  fail: "msg='Deployment {{ cluster.name }}-k2-deployment failed with: {{ yaml_inspect_result }}'"
  when: (yaml_inspect_result is defined) and ((yaml_inspect_result.deployment.operation.status != 'DONE') or (yaml_inspect_result.deployment.operation.progress != 100))

- name: Set legacy kubeconfig certificate behavior
  command: >
    gcloud config set container/use_client_certificate True

- name: Get kubeconfig
  command: >
    gcloud container clusters get-credentials {{ cluster.name }}
       --project {{ cluster.providerConfig.project }}
       --zone {{ cluster.providerConfig.zone.primaryZone }}
       --quiet
  environment:
    KUBECONFIG: "{{ config_base | expanduser }}/{{ cluster.name }}/admin.kubeconfig"
    CLOUDSDK_CONTAINER_USE_CLIENT_CERTIFICATE: True

- include: update-cluster.yaml
