---

- set_fact:
    cluster: "{{ a_cluster }}"
    
- name: Get needed number of nodes
  set_fact:
    needed_nodes: "{{ kraken_config | expected_nodes(readiness_type, readiness_value) }}"

- name: Get timestamp before api server wait
  set_fact:
    wait_api_start_timestamp: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"

- name: Fetch k8s api server address
  set_fact:
    api_servers: "{{ lookup('file', kubeconfig) | from_yaml | json_query('clusters[*].cluster.server') }}"

- name: Wait for api server to become available in case it's not
  wait_for:
    host: "{{ item | regex_replace('https://','') }}"
    port: 443
    timeout: "{{ readiness_wait }}"
  with_items: "{{ api_servers }}"

- name: Get timestamp after api server wait
  set_fact:
    wait_api_end_timestamp: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"

- name: Set remaining time fact
  set_fact:
    remaining_time: "{{ readiness_wait | int - (wait_api_end_timestamp | int - wait_api_start_timestamp | int ) }}"

- include: bootstrap-default-rbac-policy.yaml
  when: "cluster.kubeAuth.authz.rbac is defined"

- name: Get all nodes
  command: >
    kubectl --kubeconfig={{ kubeconfig | expanduser }} get nodes --no-headers=true
  register: job_get_nodes_result
  until: "{{ job_get_nodes_result.stdout_lines | length }} >= needed_nodes | int"
  retries: "{{ remaining_time }}"
  delay: 1
